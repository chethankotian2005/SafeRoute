rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - SIMPLIFIED FOR SIGNUP
    match /users/{userId} {
      allow read: if isAuthenticated();
      // Simplified: Allow creation if request.auth exists and UIDs match
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if isOwner(userId);
    }
    
    // Community reports collection
    match /community_reports/{reportId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() 
        && (resource.data.userId == request.auth.uid 
            || request.resource.data.keys().hasOnly(['upvotes', 'verified']));
      allow delete: if isOwner(resource.data.userId);
    }
    
    // Safe spots collection (read-only for users)
    match /safe_spots/{spotId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only backend can write
    }
    
    // SOS alerts collection
    match /sos_alerts/{alertId} {
      allow read: if isAuthenticated() 
        && (resource.data.userId == request.auth.uid 
            || resource.data.emergencyContacts[request.auth.uid] != null);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }
    
    // Route cache collection
    match /route_cache/{routeId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // User preferences
    match /user_preferences/{userId} {
      allow read, write: if isOwner(userId);
    }
  }
}
